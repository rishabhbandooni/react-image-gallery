{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RISHABH BANDOONI\\\\React_Image_Search_Application\\\\src\\\\components\\\\imageResults\\\\imageResults.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { GridList, GridTile } from 'material-ui/GridList';\nimport IconButton from 'material-ui/IconButton';\nimport ZoomIn from 'material-ui/svg-icons/action/zoom-in';\nimport Dialog from 'material-ui/Dialog';\nimport FlatButton from 'material-ui/FlatButton';\n\nclass ImageResults extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false,\n      currentImg: '',\n      visible: 10\n    };\n\n    this.handleOpen = img => {\n      this.setState({\n        open: true,\n        currentImg: img\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n  }\n\n  showMore() {\n    this.setState(old => {\n      return {\n        visible: old.visible + 10\n      };\n    });\n  }\n\n  render() {\n    let imageList;\n    const {\n      images\n    } = this.props;\n\n    if (images) {\n      imageList = /*#__PURE__*/React.createElement(GridList, {\n        cols: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }\n      }, images.splice(0, this.state.visible).map(img => /*#__PURE__*/React.createElement(GridTile, {\n        title: img.tags,\n        key: img.id,\n        actionIcon: /*#__PURE__*/React.createElement(IconButton, {\n          onClick: () => this.handleOpen(img.largeImageURL),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(ZoomIn, {\n          color: \"white\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: img.largeImageURL,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }\n      }))));\n    } else {\n      imageList = null;\n    }\n\n    const actions = [/*#__PURE__*/React.createElement(FlatButton, {\n      label: \"Close\",\n      primary: true,\n      onClick: this.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    })];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: 50,\n        marginRight: 50,\n        marginTop: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, imageList, /*#__PURE__*/React.createElement(Dialog, {\n      actions: actions,\n      modal: false,\n      open: this.state.open,\n      onRequestClose: this.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.currentImg,\n      alt: \"\",\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        backgroundColor: 'black',\n        color: 'white',\n        marginLeft: 650,\n        marginTop: 100,\n        paddingTop: 10,\n        paddingLeft: 10,\n        fontSize: 30\n      },\n      type: \"load\",\n      onClick: this.showMore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, \"Load More \"));\n  }\n\n}\n\nImageResults.propTypes = {\n  images: PropTypes.array.isRequired\n};\nexport default ImageResults;","map":{"version":3,"sources":["C:/Users/RISHABH BANDOONI/React_Image_Search_Application/src/components/imageResults/imageResults.js"],"names":["React","Component","PropTypes","GridList","GridTile","IconButton","ZoomIn","Dialog","FlatButton","ImageResults","state","open","currentImg","visible","handleOpen","img","setState","handleClose","showMore","old","render","imageList","images","props","splice","map","tags","id","largeImageURL","actions","marginLeft","marginRight","marginTop","width","backgroundColor","color","paddingTop","paddingLeft","fontSize","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {GridList,GridTile} from 'material-ui/GridList';\r\nimport IconButton from 'material-ui/IconButton';\r\nimport ZoomIn from 'material-ui/svg-icons/action/zoom-in';\r\nimport Dialog from 'material-ui/Dialog';\r\nimport FlatButton from 'material-ui/FlatButton';\r\nclass ImageResults extends Component{\r\n    state={\r\n        open:false,\r\n        currentImg:'', \r\n        visible:10\r\n    }\r\n   \r\n    handleOpen=img=>{\r\n        this.setState({open:true,currentImg:img})\r\n    }\r\n    \r\n    handleClose=()=>{\r\n        this.setState({open:false});\r\n    }\r\n   \r\n  showMore(){\r\n    this.setState((old)=>{\r\n          return{visible:old.visible + 10}\r\n      })\r\n  }\r\n    render()\r\n    {\r\n        let imageList;\r\n        const {images}=this.props\r\n\r\n        if(images)\r\n        {\r\n            imageList=(\r\n                <GridList cols={4}>\r\n                {  images.splice(0,this.state.visible).map(img=>(\r\n                        <GridTile\r\n                        title={img.tags}\r\n                        key={img.id}\r\n                        actionIcon={\r\n                            <IconButton onClick={()=>this.handleOpen(img.largeImageURL)}>\r\n                            <ZoomIn color=\"white\" />\r\n                            </IconButton>\r\n                        }\r\n                        >\r\n                        <img src={img.largeImageURL} alt=\"\" />\r\n                        </GridTile>\r\n                    ))\r\n                }\r\n                </GridList>\r\n            )\r\n        }\r\n        else{\r\n            imageList=null;\r\n        }\r\n        const actions=[\r\n            <FlatButton  label=\"Close\" primary={true} onClick={this.handleClose}/>\r\n        ]\r\n        return(\r\n            <div style={{marginLeft:50,marginRight:50,marginTop:20}}>\r\n            {imageList}\r\n            <Dialog\r\n            actions={actions}\r\n            modal={false}\r\n            open={this.state.open}\r\n            onRequestClose={this.handleClose}\r\n            >\r\n            <img src={this.state.currentImg} alt=\"\" style={{width:'100%'}} />\r\n            </Dialog>\r\n            <button \r\n style=\r\n {{backgroundColor:'black',\r\n  color:'white',\r\n marginLeft:650,\r\n marginTop:100,\r\n paddingTop:10,\r\n paddingLeft:10,\r\n fontSize:30,\r\n\r\n}}\r\ntype=\"load\" onClick={this.showMore}>Load More </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nImageResults.propTypes={\r\n    images:PropTypes.array.isRequired\r\n}\r\n\r\nexport default ImageResults;"]},"metadata":{},"sourceType":"module"}